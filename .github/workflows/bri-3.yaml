name: bri-3

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: "postgresql://postgres:example@localhost:5432/postgres"
      DID_REGISTRY: "0x03d5003bf0e79c5f5223588f347eba39afbc3818"
      DID_BPI_OPERATOR_PUBLIC_KEY: "0x08872e27BC5d78F1FC4590803369492868A1FCCb"
      DID_BPI_OPERATOR_PRIVATE_KEY: "2c95d82bcd8851bd3a813c50afafb025228bf8d237e8fd37ba4adba3a7596d58"
      CCSM_NETWORK: "localhost"
      INFURA_PROVIDER_API_KEY: "c5f37cd25eca4007a9768f18f492bc6f"
      LOCALHOST_RPC_URL: "http://127.0.0.1:8545"
      LOCALHOST_CCSM_CONTRACT_ADDRESS: "0x1CC96ba639d4fd7624913fde39122270a1aC5c34"
      SERVICE_URL: "bri-3"
      BPI_NATS_SERVER_URL: "localhost:4222"
      BPI_NATS_SERVER_USER: "bpi_operator"
      BPI_NATS_SERVER_PASS: "liftboiliftboiliftboiliftboi1"
      BPI_ENCRYPTION_KEY_K_PARAM: "yzkXp3vY_AZQ3YfLv9GMRTYkjUOpn9x18gPkoFvoUxQ"
      BPI_ENCRYPTION_KEY_KTY_PARAM: "oct"
      SNARKJS_CIRCUITS_PATH: "zeroKnowledgeArtifacts/circuits/"
      VSM_CYCLE_PERIOD_IN_SECS: 15
      VSM_CYCLE_TX_BATCH_SIZE: 5
      MERKLE_TREE_HASH_ALGH: "sha256"
      EFAKTURA_API_KEY: ${{ secrets.EFAKTURA_API_KEY }}
      EFAKTURA_INVOICE_ID: ${{ secrets.EFAKTURA_INVOICE_ID }}
      EFAKTURA_URL: ${{ secrets.EFAKTURA_URL }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Verify Docker Compose availability
        run: docker compose version

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install project dependencies
        run: npm install

      - name: Run test:origination flow with Docker Compose
        run: make test-origination

      - name: Cleanup containers (in case test script failed before teardown)
        if: always()
        run: make down